%token PACKAGE MAIN VAR_ID FUNC_ID FUNC EOL EOF INT FLOAT64 STRING IF ELSE FOR RETURN EXPR COND INPUTS INPUTI INPUTF
'(' ')' '{' '}' ':=' ';' ',' '='
%%
program : prolog FUNC func_list_pre MAIN '(' ')' '{' EOL body '}' EOL func_list EOF ;
prolog: PACKAGE MAIN EOL;

//------------List of Functions BEFORE main------------
func_list_pre: /*eps*/ | FUNC_ID '(' param_list ')' func_def_type EOL FUNC func_list_pre;
//------------List of functions AFTER main-------------
func_list: /*eps*/ | func_def func_list;
func_def: FUNC FUNC_ID '(' param_list ')' func_def_type EOL;

//-----------PARAMETERS of function--------------------
param_list: /*eps*/ | VAR_ID type next_param;
next_param: /*eps*/ | ',' VAR_ID type next_param;

//-----------Determining RETURN TYPE(s) of function----
func_def_type: '{' EOL body '}' | '(' func_def_ret;
func_def_ret: ')' '{' EOL body '}' | ret_list_def ')' '{' EOL body '}';
//-----------List of RETURN TYPES----------------------
ret_list_def: type next_ret_def;
next_ret_def: /*eps*/ | ',' type next_ret_def;


//-----------BODY of functions-------------------------
body: /*eps*/ | command EOL body;
command: VAR_ID var_ | func_call | if | cycle | return;

//-----------COMMANDS----------------------------------
//--------VARIABLE definition & assignment-------------
var_: var_list var_cont;
var_cont: ':=' expr_list | '=' expr_list;
var_list: VAR_ID next_id;
next_id: /*eps*/ | ',' VAR_ID next_id;
//--------IF-------------------------------------------
if: IF COND '{' EOL body '}' if_cont;
if_cont: /*eps*/ | ELSE else_;
else_: '{' EOL body '}' | if;
//--------FOR------------------------------------------
cycle: FOR for_def ';' COND ';' for_move '{' EOL body '}';
for_def: /*eps*/ | var_list ':=' expr_list;
for_move: /*eps*/ | var_list '=' expr_list;
//--------RETURN---------------------------------------
return: RETURN return_list;
return_list: /*eps*/ | func_call | EXPR next_ret;
next_ret: /*eps*/ | ',' EXPR next_ret;
//--------FUNCTION CALLS-------------------------------
func_call: FUNC_ID '(' func_args ')';
func_args: /*eps*/ | func_call | EXPR next_arg;
next_arg: /*eps*/ | ',' EXPR next_arg;

//--------EXPRESSIONS----------------------------------
expr_list: EXPR next_expr | func_call;
next_expr: /*eps*/ | ',' EXPR next_expr;

//--------DATA TYPES-----------------------------------
type: INT;
type: FLOAT64;
type: STRING;
